# testing playbook
- hosts: localhost
  connection: local
  gather_facts: no

  vars:
    #### START defaults/main.yml ##############################################################
    wp_cli_phar_get_url: https://raw.github.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
    wp_cli_bin_path: "/usr/local/bin/{{ wp_cli_bin_filename }}"
    wp_cli_bin_filename: wp
    
    # php-cli command used to run wp_cli_bin_command (vars/main.yml)
    # see http://php.net/manual/en/features.commandline.options.php for more details
    # Many package installs need a higher php memory_limit. 384M works well.
    wp_cli_php_command: "php -d memory_limit=384M"
    
    # list of wp-cli package names and desired install state
    # Setup packages
    # wp_cli_packages:
    #   - { name: "danielbachhuber/wp-cli-stat-command", state: installed }
    #   - { name: "iandunn/wp-cli-plugin-active-on-sites", state: installed }
    #   - { name: "billerickson/wp-cli-plugin-install-missing", state: installed }
    #   - { name: "frozzare/wp-cli-lint", state: installed }
    #   - { name: "anhskohbo/wp-cli-themecheck", state: installed }
    # Test package change functionality
    wp_cli_packages:
      - { name: "danielbachhuber/wp-cli-stat-command", state: installed }
      - { name: "iandunn/wp-cli-plugin-active-on-sites", state: latest }
      - { name: "billerickson/wp-cli-plugin-install-missing", state: installed }
      - { name: "frozzare/wp-cli-lint", state: absent }
      - { name: "anhskohbo/wp-cli-themecheck", state: absent }
    
    # Enable file check of wp-cli.phar using defined hash type (md5 or sha512) 
    # see available hash files: https://github.com/wp-cli/builds/tree/gh-pages/phar
    wp_cli_phar_hash_file_type: sha512
    
    # url of hash file. Url of wp-cli.phar hash is 'hash type' appended to wp-cli.phar url.
    wp_cli_phar_hash_type_uri_url: "{{ wp_cli_phar_get_url + '.' + wp_cli_phar_hash_file_type }}"
    
    # predefine wp-cli.phar get_url checksum. why? prevent upgrade or use custom hash e.g. sha1.
    #wp_cli_phar_get_url_checksum: "sha1:617038739c5c7102a553b6a0d22207d4aeb80b89"
    
    # Download and deploy wp-cli from a central deployment host.
    # This could be a "jumphost" or the localhost control machine.
    wp_cli_delegate_host: localhost
    wp_cli_delegate_to_host: "{{wp_cli_delegate_host}}"
    
    # Option: define download directory on deployment host.
    wp_cli_delegate_host_download_dir: "~/code/ansible-role-wpcli/tests"
    
    wp_cli_delegate_packages_download_dir: "{{ wp_cli_delegate_host_download_dir|default('~') }}/.wp_cli/packages"

    #### END default/main.yml ##############################################################

    #### START vars/main.yml ################################################################

    user_at_host: "{{ lookup('pipe', 'whoami') + '@' + inventory_hostname }}"

    # sets WP_CLI_PACKAGES_DIR environment variable:
    # if wp_cli_delegate_host defined, set to wp_cli_delegate_packages_download_dir
    # else if WP_CLI_PACKAGES_DIR already exists use it, else use ~/.wp_cli/packages
    wp_cli_packages_dir_env: >-
      {{ 'WP_CLI_PACKAGES_DIR=' + {
          wp_cli_delegate_host|default('nomatch'):wp_cli_delegate_packages_download_dir
        }[ wp_cli_delegate_host|default('matchno') ] | default(
          '${WP_CLI_PACKAGES_DIR:-~/.wp-cli/packages}'
        )
      }}
    
    wp_cli_bin_command: >-
      {{
        wp_cli_packages_dir_env + ' ' +
        wp_cli_php_command|default('php') + ' ' +
        wp_cli_bin_path + ' '
      }}

    wp_cli_existing_packages_on_dest_list: []
    wp_cli_state_installed_packages: []

    state_installed:
      state: installed

    #### END VARS/MAIN ################################################################

  tasks:
    # get_wpcli.yml file for derekjbernard.wp-cli
    - name: get wp-cli.phar hash file
      uri:
        url: "{{ wp_cli_phar_hash_type_uri_url }}"
        return_content: yes
      delegate_to: "{{ wp_cli_delegate_to_host | default(omit) }}"
      register: wp_cli_phar_hash_file
      when: wp_cli_phar_hash_file_type is defined
    
    - name: 'construct wp-cli.phar get_url checksum value'
      set_fact:
        wp_cli_phar_get_url_checksum: >
          {{ wp_cli_phar_hash_file_type + ':' +
          wp_cli_phar_hash_file.content }}
      delegate_to: "{{ wp_cli_delegate_to_host | default(omit) }}"
      when: wp_cli_phar_hash_file_type is defined
    
    - name: Install WP-CLI
      get_url:
        url: "{{ wp_cli_phar_get_url }}"
        dest: "{{ wp_cli_bin_path }}"
        checksum: "{{ wp_cli_phar_get_url_checksum | default(omit) }}"
        mode: 0755
      delegate_to: "{{ wp_cli_delegate_to_host | default(omit) }}"
      tags:
        - packages
  
    - name: "{{ user_at_host }} - get list of existing packages"
      shell: "{{ wp_cli_bin_command + 'package list --fields=name --format=json' }}"
      register: wp_cli_existing_packages_on_dest
      changed_when: false

    - name: 'Add "state:installed" to members of existing packages list.'
      set_fact:
        wp_cli_existing_packages_on_dest_list: >-
          {{
            wp_cli_existing_packages_on_dest_list|
            union(
              [
                item|combine({ "state": "installed" })
              ]
            )
          }}
      with_items: "{{ wp_cli_existing_packages_on_dest.stdout|from_json }}"

    - name: compile package change list
      set_fact:
        wp_cli_package_change_list: >-
          {{
            wp_cli_packages|
            difference(
              wp_cli_existing_packages_on_dest_list
            )
          }}

    - name: 'show wp_cli_php_command'
      debug:
        msg: "{{wp_cli_php_command}}"

    - name: "{{ user_at_host }} - Build WP-CLI packages "
      shell: "{{ wp_cli_bin_command }} package install {{ item.name }}"
      register: command_result
      delegate_to: "{{ wp_cli_delegate_to_host | default(omit) }}"
      changed_when: "'Nothing to install or update' not in command_result.stdout"
      when:
        - item is defined
        - item.state != 'absent'
      with_items: "{{ wp_cli_package_change_list }}"
      tags:
        - packages

    - name: show 'wp_cli_state_installed_packages'
      debug: 
        msg: "{{item.name}}"
      with_items: "{{wp_cli_state_installed_packages}}"

    - name: show 'items already installed?'
      debug: msg="{{wp_cli_existing_packages_on_dest.stdout|from_json|selectattr('name', 'equalto', item)|map(attribute='name')|join(" ")}}"
      with_items: "{{ wp_cli_packages|selectattr('state', 'equalto', 'installed')|map(attribute='name') | list}}"

    - name: show 'wp_cli_existing_packages_on_dest.stdout|from_json'
      debug:
        msg: "{{item}}"
      with_items: "{{ wp_cli_existing_packages_on_dest.stdout|from_json }}"

    - name: existing package list with state installed
      debug:
        msg: "{{wp_cli_existing_packages_on_dest_list}}"

    - name: difference of lists
      debug:
        msg: "{{wp_cli_packages|difference(wp_cli_existing_packages_on_dest_list)}}"

    - name: show 'wp_cli_package_change_list' same as difference list
      debug:
        msg: "{{wp_cli_package_change_list}}"

    - name: uninstall existing items assigned state absent
      debug: msg="{{ wp_cli_bin_command + 'package uninstall ' + wp_cli_existing_packages_on_dest_list|selectattr('name', 'equalto', item)|map(attribute='name') | list | join(" ") }}"
      with_items: "{{ wp_cli_package_change_list|selectattr('state', 'equalto', 'absent')|map(attribute='name') | list}}"

    - name: uninstall existing items assigned state absent
      debug: msg="{{ wp_cli_bin_command + 'package uninstall ' + wp_cli_existing_packages_on_dest_list|selectattr('name', 'equalto', item.name)|map(attribute='name') | list | join(" ") }}"
      with_items: "{{ wp_cli_package_change_list|selectattr('state', 'equalto', 'absent')| list}}"

    - name: wpcli packages add remove packages to declared states
      debug: msg="{{ wp_cli_bin_command + 'package ' + { "absent":"uninstall", "latest":"install", "installed":"install" }[item.state] + ' ' + item.name}}"
      with_items:
        - "{{ wp_cli_package_change_list|selectattr('state', 'equalto', 'absent')| list}}"
        - "{{ wp_cli_package_change_list|selectattr('state', 'equalto', 'latest')| list}}"
        - "{{ wp_cli_package_change_list|selectattr('state', 'equalto', 'installed')| list}}"

    # - name: wp-cli compile state installed packages list
    #   set_fact: wp_cli_state_installed_packages="{{ wp_cli_state_installed_packages|union([ item ]) }}"
    #   with_items: "{{ wp_cli_packages }}"
    #   when: item.state == "installed"

    # - name: compile state absent packages list
    #   set_fact: wp_cli_state_absent_packages="{{ wp_cli_state_absent_packages|union([ item ]) }}"
    #   with_items: "{{ wp_cli_packages }}"
    #   when: item.state == "absent"

    # - name: compile state latest packages list
    #   set_fact: wp_cli_state_latest_packages="{{ wp_cli_state_latest_packages|union([ item ]) }}"
    #   with_items: "{{ wp_cli_packages }}"
    #   when: item.state == "latest"
